{
  "createdAt": "2025-07-31T20:00:44.334Z",
  "updatedAt": "2025-07-31T20:40:53.000Z",
  "id": "lIgVtGd3YasbPQbo",
  "name": "Resume -> LinkedIn -> Telegram Job Match",
  "active": true,
  "isArchived": false,
  "nodes": [
    {
      "parameters": {
        "fieldToSplitOut": "links",
        "options": {}
      },
      "id": "ddaf74f6-c49e-442f-b1a2-76fd4ff21a36",
      "name": "Split Out",
      "type": "n8n-nodes-base.splitOut",
      "position": [
        320,
        160
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "options": {}
      },
      "id": "d5b93d72-5f2e-45be-a475-60da71612c42",
      "name": "Loop Over Items",
      "type": "n8n-nodes-base.splitInBatches",
      "position": [
        -1616,
        736
      ],
      "typeVersion": 3
    },
    {
      "parameters": {
        "amount": 10
      },
      "id": "d222be24-24e0-45b7-b235-6d12465c6cdd",
      "name": "Wait",
      "type": "n8n-nodes-base.wait",
      "position": [
        -1392,
        480
      ],
      "webhookId": "c9cb4878-ae4d-4b8e-bd37-5395011f7761",
      "typeVersion": 1.1
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "version": 2,
            "leftValue": "",
            "caseSensitive": true,
            "typeValidation": "loose"
          },
          "conditions": [
            {
              "id": "1499f1ac-a7ae-4983-85c7-aa7b8445b2e2",
              "operator": {
                "type": "number",
                "operation": "gte"
              },
              "leftValue": "={{ $json.score }}",
              "rightValue": 40
            }
          ],
          "combinator": "and"
        },
        "looseTypeValidation": true,
        "options": {}
      },
      "id": "3fecfe5b-4080-4371-a72f-a3b73761fd0d",
      "name": "Score Filter",
      "type": "n8n-nodes-base.if",
      "position": [
        528,
        480
      ],
      "typeVersion": 2.2
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=Hi, you are a helpful job matcher, you read my resume then analyze the given resume and job description and provide a job matching score. also write a cover letter based on my resume and the job description. cover letter must be at least 2 paragraph and ignore the name, address and signiture part from start and end.\nif you are using special character like \" use \\ to escape it. output must be parse in json without error. \n\nfor example your response should be like: {\"score\": 80, \"coverLetter\": \"sample cover letter\" }\n\njob_description: {{ $json.description }}\nmy_resume: {{ $('Extract from File').item.json.text }}",
        "options": {}
      },
      "id": "23fe2c42-05fd-42a1-bf49-513c8110e6fd",
      "name": "AI Agent",
      "type": "@n8n/n8n-nodes-langchain.agent",
      "position": [
        -432,
        480
      ],
      "typeVersion": 2
    },
    {
      "parameters": {
        "operation": "pdf",
        "options": {}
      },
      "id": "c6476f35-faab-4c74-ba0e-9c0f2f5afccc",
      "name": "Extract from File",
      "type": "n8n-nodes-base.extractFromFile",
      "position": [
        -1056,
        160
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "operation": "download",
        "fileId": {
          "__rl": true,
          "value": "1d5FC3KDCb5chuTgIwneBpjhghQ5XBFuG",
          "mode": "list",
          "cachedResultName": "!BIAMS-2025_Resume.pdf",
          "cachedResultUrl": "https://drive.google.com/file/d/1d5FC3KDCb5chuTgIwneBpjhghQ5XBFuG/view?usp=drivesdk"
        },
        "options": {}
      },
      "id": "58d88d3c-e632-4427-a3db-f0ef47303072",
      "name": "Download file",
      "type": "n8n-nodes-base.googleDrive",
      "position": [
        -1312,
        160
      ],
      "typeVersion": 3,
      "credentials": {
        "googleDriveOAuth2Api": {
          "id": "3UJ5Z61JvwmklIRe",
          "name": "Google Drive account"
        }
      }
    },
    {
      "parameters": {
        "operation": "appendOrUpdate",
        "documentId": {
          "__rl": true,
          "value": "1eQ1AuFn9zsg3oI6WiahNKMLvzplcNnRoqTFVBrbIZ9Y",
          "mode": "list",
          "cachedResultName": "n8n - Job Search",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1eQ1AuFn9zsg3oI6WiahNKMLvzplcNnRoqTFVBrbIZ9Y/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "mode": "list",
          "value": "gid=0",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1Rj4C28b90cHZKg86mCAoV5PUR7OfXxolU1i1vVjMP0M/edit#gid=0",
          "cachedResultName": "Sheet1"
        },
        "columns": {
          "value": {
            "link": "={{ $('Modify Job Attributes').item.json.applyLink }}",
            "Title": "={{ $('Modify Job Attributes').item.json.title }}",
            "score": "={{ $json.score }}",
            "Company": "={{ $('Modify Job Attributes').item.json.company }}",
            "Location": "={{ $('Modify Job Attributes').item.json.location }}",
            "description": "={{ $('Modify Job Attributes').item.json.description }}",
            "Cover Letter": "={{ $json.coverLetter }}"
          },
          "schema": [
            {
              "id": "Title",
              "type": "string",
              "display": true,
              "required": false,
              "displayName": "Title",
              "defaultMatch": false,
              "canBeUsedToMatch": true
            },
            {
              "id": "Company",
              "type": "string",
              "display": true,
              "required": false,
              "displayName": "Company",
              "defaultMatch": false,
              "canBeUsedToMatch": true
            },
            {
              "id": "Location",
              "type": "string",
              "display": true,
              "required": false,
              "displayName": "Location",
              "defaultMatch": false,
              "canBeUsedToMatch": true
            },
            {
              "id": "link",
              "type": "string",
              "display": true,
              "removed": false,
              "required": false,
              "displayName": "link",
              "defaultMatch": false,
              "canBeUsedToMatch": true
            },
            {
              "id": "score",
              "type": "string",
              "display": true,
              "required": false,
              "displayName": "score",
              "defaultMatch": false,
              "canBeUsedToMatch": true
            },
            {
              "id": "description",
              "type": "string",
              "display": true,
              "required": false,
              "displayName": "description",
              "defaultMatch": false,
              "canBeUsedToMatch": true
            },
            {
              "id": "Cover Letter",
              "type": "string",
              "display": true,
              "removed": false,
              "required": false,
              "displayName": "Cover Letter",
              "defaultMatch": false,
              "canBeUsedToMatch": true
            }
          ],
          "mappingMode": "defineBelow",
          "matchingColumns": [
            "link"
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "id": "f2678b3e-19f7-446b-acc3-b1c9d1ace5b1",
      "name": "Append or update row in sheet",
      "type": "n8n-nodes-base.googleSheets",
      "position": [
        240,
        480
      ],
      "typeVersion": 4.6,
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "kOeJv9ACT74Bk3jB",
          "name": "Google Sheets account"
        }
      }
    },
    {
      "parameters": {
        "chatId": "6391466165",
        "text": "=Title: {{ $json.Title }}\nCompany: {{ $json.Company }}\nLocation: {{ $json.Location }}\nJob Score: {{ $json.score }}\nApply: {{ $json.link }}",
        "additionalFields": {
          "appendAttribution": false
        }
      },
      "id": "11d780fb-fc29-440c-bc0b-53c5a5ec105e",
      "name": "Send a text message",
      "type": "n8n-nodes-base.telegram",
      "position": [
        768,
        768
      ],
      "webhookId": "17b9ebe8-c8d4-4bd9-ad20-45842ddc2c00",
      "typeVersion": 1.2,
      "credentials": {
        "telegramApi": {
          "id": "gOfGxWQRYcHtN3CV",
          "name": "Telegram account"
        }
      }
    },
    {
      "parameters": {
        "documentId": {
          "__rl": true,
          "value": "1eQ1AuFn9zsg3oI6WiahNKMLvzplcNnRoqTFVBrbIZ9Y",
          "mode": "list",
          "cachedResultName": "n8n - Job Search",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1eQ1AuFn9zsg3oI6WiahNKMLvzplcNnRoqTFVBrbIZ9Y/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": 1038962310,
          "mode": "list",
          "cachedResultName": "Filter",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1eQ1AuFn9zsg3oI6WiahNKMLvzplcNnRoqTFVBrbIZ9Y/edit#gid=1038962310"
        },
        "options": {}
      },
      "id": "48f176dd-8fca-4cfc-8f9b-54eaa116e7e2",
      "name": "Get row(s) in sheet",
      "type": "n8n-nodes-base.googleSheets",
      "position": [
        -688,
        160
      ],
      "typeVersion": 4.6,
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "kOeJv9ACT74Bk3jB",
          "name": "Google Sheets account"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "let url = \"https://www.linkedin.com/jobs/search/?f_TPR=r86400\"\n\nconst keyword = $input.first().json.Keyword\nconst location =  $input.first().json.Location\nconst experienceLevel = $input.first().json['Experience Level']\nconst remote = $input.first().json.Remote\nconst jobType = $input.first().json['Job Type']\nconst easyApply = $input.first().json['Easy Apply']\n\nif (keyword != \"\") {\n  url += `&keywords=${keyword}`;\n}\n\nif (location != \"\") {\n  url += `&location=${location}`;\n}\n\nif (experienceLevel !== \"\") {\n  // we have experienceLevel as a string with values like \"Internship, Entry level\"\n  // we  transform it to \"1,2,3\" where:\n  // Internship -> 1\n  // Entry level -> 2\n  // Associate -> 3\n  // Mid-Senior level -> 4\n  // Director -> 5\n  // Executive -> 6\n  const transformedExperiences = experienceLevel\n    .split(\",\")\n    .map((exp) => {\n      switch (exp.trim()) {\n        case \"Internship\":\n          return \"1\";\n        case \"Entry level\":\n          return \"2\";\n        case \"Associate\":\n          return \"3\";\n        case \"Mid-Senior level\":\n          return \"4\";\n        case \"Director\":\n          return \"5\";\n        case \"Executive\":\n          return \"6\";\n        default:\n          return \"\";\n      }\n    })\n    .filter(Boolean); // filter out any empty strings\n  url += `&f_E=${transformedExperiences.join(\",\")}`;\n}\n\nif (remote.length != \"\") {\n  // we have remote as a string with values like \"Remote, Hybrid\"\n  // we transform it to \"2,3,1\" where:\n  // On-Site -> 1\n  // Remote -> 2\n  // Hybrid -> 3\n  const transformedRemote = remote\n    .split(\",\")\n    .map((e) => {\n      switch (e.trim()) {\n        case \"Remote\":\n          return \"2\";\n        case \"Hybrid\":\n          return \"3\";\n        case \"On-Site\":\n          return \"1\";\n        default:\n          return \"\";\n      }\n    })\n    .filter(Boolean); // filter out any empty strings\n  url += `&f_WT=${transformedRemote.join(\",\")}`;\n}\n\nif (jobType != \"\") {\n  // we have jobType as a string with values like \"Full-time, Part-time\"\n  // we transform it to \"F,P\" where:\n  // Full-time -> F\n  // Part-time -> P\n  // Contract -> C\n  // Temporary -> T\n  // Other -> O\n  // Internship -> I\n  const transformedJobType = jobType.split(\",\").map((type) => type.trim().charAt(0).toUpperCase());\n  url += `&f_JT=${transformedJobType.join(\",\")}`;\n}\n\nif (easyApply != \"\") {\n  url += \"&f_EA=true\";\n}\n\nreturn {url}"
      },
      "id": "65518daf-147c-4eb6-8bb5-af8620b99de0",
      "name": "Create search URL",
      "type": "n8n-nodes-base.code",
      "position": [
        -368,
        160
      ],
      "typeVersion": 2
    },
    {
      "parameters": {
        "rule": {
          "interval": [
            {
              "triggerAtHour": 17
            }
          ]
        }
      },
      "id": "09d17872-5648-4003-b5b3-73de0af973fb",
      "name": "Schedule Trigger",
      "type": "n8n-nodes-base.scheduleTrigger",
      "position": [
        -1616,
        160
      ],
      "notesInFlow": false,
      "typeVersion": 1.2
    },
    {
      "parameters": {
        "content": "Worklofw executes daily at 5pm, you can change the interval and time of execution.\n",
        "height": 260
      },
      "id": "b11fa077-f02f-4c8e-9c55-3c931b0f7749",
      "name": "Sticky Note",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -1680,
        48
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "content": "Read user resume from google drive, you need to upload your resume in pdf format and select in **From List** section.",
        "height": 260,
        "color": 4
      },
      "id": "0ef76fd1-3c72-49a9-934d-44fa75fa6f76",
      "name": "Sticky Note1",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -1392,
        48
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "content": "Convert pdf file into text to AI can read content.",
        "height": 260,
        "color": 5
      },
      "id": "e16716eb-1477-4e9a-8b38-d62eb5f94a12",
      "name": "Sticky Note2",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -1120,
        48
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "content": "Read search filter consiste of keywords, location, experience level, remot, job type and easy apply from google sheet.\n\nYou can download [this Template](https://docs.google.com/spreadsheets/d/1mtKVxj_z_QCLGXMx0mJVihWSgS41SzHfU1Rv4r_mRY0) and copy in your personal space.",
        "height": 300,
        "width": 400,
        "color": 4
      },
      "id": "f3908150-0391-4ca5-8dba-076782ff6f42",
      "name": "Sticky Note3",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -832,
        16
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "content": "Create Linkedin search url from filter params.",
        "height": 260,
        "width": 180
      },
      "id": "01ac4cc4-a115-4f6d-ac09-c585970cbad5",
      "name": "Sticky Note4",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -416,
        48
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "url": "={{ $json.url }}",
        "options": {}
      },
      "id": "b5da9d7b-cb98-42bb-b8ab-2dfc9bec2d06",
      "name": "Fetch Jobs from Linkedin",
      "type": "n8n-nodes-base.httpRequest",
      "position": [
        -160,
        160
      ],
      "typeVersion": 4.2
    },
    {
      "parameters": {
        "content": "Extrat Job links from Linkdin search result",
        "height": 320,
        "width": 220
      },
      "id": "ed854ffd-a348-4c1e-abe8-83892e07be8d",
      "name": "Sticky Note5",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        0,
        0
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "content": "fetch jobs one by one",
        "height": 300,
        "width": 180,
        "color": 6
      },
      "id": "67c596e4-ed1f-45a5-859c-433209fdc7a7",
      "name": "Sticky Note6",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        288,
        16
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "content": "Wait 10 sec between each job fetch.",
        "height": 260,
        "width": 180,
        "color": 3
      },
      "id": "6ca14e0c-c6a7-4d16-ac78-7f566fcf0a08",
      "name": "Sticky Note7",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -1440,
        352
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "url": "={{ $json.links }}",
        "options": {}
      },
      "id": "efaaf6c3-e99e-4978-b622-b5399f02e092",
      "name": "Fetch Job Page",
      "type": "n8n-nodes-base.httpRequest",
      "position": [
        -1200,
        480
      ],
      "executeOnce": false,
      "retryOnFail": true,
      "typeVersion": 4.2,
      "waitBetweenTries": 5000,
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "content": "Parse job HTML page, extract **title**, **company**, **location**, **jobDescription** and **applyLink** from it",
        "height": 300,
        "width": 380,
        "color": 6
      },
      "id": "030d82a6-a38b-483f-b47e-9c4025fd18b3",
      "name": "Sticky Note8",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -1008,
        352
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "content": "AI model compare your resume and job description and rate your resume from 0-100, (0 does not match, 100 fully match) and also AI will write a sample cover letter based on your resume and your expriences and job description.\nI used Gemini model here, you can use othe AI model like OpenAI (chat GPT)",
        "height": 440,
        "width": 540,
        "color": 7
      },
      "id": "66a78ca7-30bc-4582-9b07-301b41f80f72",
      "name": "Sticky Note9",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -608,
        352
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "content": "Convert AI output to JSON.",
        "height": 300,
        "width": 180,
        "color": 6
      },
      "id": "3515558d-4107-49eb-a761-828433a1904d",
      "name": "Sticky Note10",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -48,
        352
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "content": "Add new job with score in google sheet.\n\nYou can download [this Template](https://docs.google.com/spreadsheets/d/1mtKVxj_z_QCLGXMx0mJVihWSgS41SzHfU1Rv4r_mRY0) and copy in your personal space.",
        "height": 300,
        "width": 260,
        "color": 4
      },
      "id": "e6509311-9a99-4aa4-8d5a-8e4b237dcd5d",
      "name": "Sticky Note11",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        160,
        352
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "content": "Send telegram message if matching score is greater than criteria defined in previuos step.",
        "height": 300,
        "width": 260,
        "color": 5
      },
      "id": "172fafea-5880-4d4d-8ad7-28db1c69d0ec",
      "name": "Sticky Note12",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        704,
        672
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "content": "Filter job that has score higher than 50. you can change filter criteria in this node.",
        "height": 300,
        "width": 260,
        "color": 4
      },
      "id": "caf6582a-c43b-41c9-8e9e-e8ff87a669df",
      "name": "Sticky Note13",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        448,
        352
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "mode": "raw",
        "jsonOutput": "=\n {{ $json.output }}",
        "includeOtherFields": true,
        "options": {}
      },
      "id": "0a2caa78-3dbc-441e-b429-cfbcd65ad42e",
      "name": "Parse AI Output",
      "type": "n8n-nodes-base.set",
      "position": [
        -16,
        480
      ],
      "typeVersion": 3.4
    },
    {
      "parameters": {
        "operation": "extractHtmlContent",
        "extractionValues": {
          "values": [
            {
              "key": "title",
              "cssSelector": "div h1"
            },
            {
              "key": "company",
              "cssSelector": "div span a"
            },
            {
              "key": "location",
              "cssSelector": "div span[class*='topcard__flavor topcard__flavor--bullet']"
            },
            {
              "key": "description",
              "cssSelector": "div.description__text.description__text--rich"
            },
            {
              "key": "jobid",
              "cssSelector": "a[data-item-type='semaphore']",
              "returnValue": "attribute",
              "attribute": "data-semaphore-content-urn"
            }
          ]
        },
        "options": {}
      },
      "id": "bb8a68ef-65e3-4881-81a4-471bf48da154",
      "name": "Parse Job Attributes",
      "type": "n8n-nodes-base.html",
      "position": [
        -976,
        480
      ],
      "typeVersion": 1.2
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "784ead57-9d83-4e08-b83c-23fa165bf045",
              "name": "description",
              "type": "string",
              "value": "={{ $json.description.replaceAll(/\\s+/g, \" \") }}"
            },
            {
              "id": "fd3c9d2c-5ff9-46a7-b70a-f990fbc7da9d",
              "name": "jobid",
              "type": "string",
              "value": "={{ $json.jobid.split(\":\").last() }}"
            },
            {
              "id": "27a20cd2-ab0d-42b7-9cee-ea64e0e26ea3",
              "name": "applyLink",
              "type": "string",
              "value": "={{ \"https://www.linkedin.com/jobs/view/\"+ $json.jobid.split(\":\").last() }} "
            }
          ]
        },
        "includeOtherFields": true,
        "options": {}
      },
      "id": "a77261be-c7e3-4adf-aad5-cd1dd465a2c5",
      "name": "Modify Job Attributes",
      "type": "n8n-nodes-base.set",
      "position": [
        -768,
        480
      ],
      "typeVersion": 3.4
    },
    {
      "parameters": {
        "operation": "extractHtmlContent",
        "extractionValues": {
          "values": [
            {
              "key": "links",
              "cssSelector": "ul.jobs-search__results-list li div a[class*=\"base-card\"]",
              "returnValue": "attribute",
              "attribute": "href",
              "returnArray": true
            }
          ]
        },
        "options": {}
      },
      "id": "115f5ec6-e853-4b24-b7ef-8602cb573b55",
      "name": "Extract Job Links",
      "type": "n8n-nodes-base.html",
      "position": [
        64,
        160
      ],
      "typeVersion": 1.2
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenRouter",
      "typeVersion": 1,
      "position": [
        -560,
        560
      ],
      "id": "0d78fd27-6738-47c2-ac3c-92fb227c0c39",
      "name": "OpenRouter Chat Model",
      "credentials": {
        "openRouterApi": {
          "id": "jQR7uGa0YGZ17Ov7",
          "name": "OpenRouter account"
        }
      }
    }
  ],
  "connections": {
    "Wait": {
      "main": [
        [
          {
            "node": "Fetch Job Page",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "AI Agent": {
      "main": [
        [
          {
            "node": "Parse AI Output",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Split Out": {
      "main": [
        [
          {
            "node": "Loop Over Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Score Filter": {
      "main": [
        [
          {
            "node": "Send a text message",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Loop Over Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Download file": {
      "main": [
        [
          {
            "node": "Extract from File",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Fetch Job Page": {
      "main": [
        [
          {
            "node": "Parse Job Attributes",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Loop Over Items": {
      "main": [
        [],
        [
          {
            "node": "Wait",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Parse AI Output": {
      "main": [
        [
          {
            "node": "Append or update row in sheet",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Schedule Trigger": {
      "main": [
        [
          {
            "node": "Download file",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Create search URL": {
      "main": [
        [
          {
            "node": "Fetch Jobs from Linkedin",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Extract Job Links": {
      "main": [
        [
          {
            "node": "Split Out",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Extract from File": {
      "main": [
        [
          {
            "node": "Get row(s) in sheet",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get row(s) in sheet": {
      "main": [
        [
          {
            "node": "Create search URL",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Send a text message": {
      "main": [
        [
          {
            "node": "Loop Over Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Parse Job Attributes": {
      "main": [
        [
          {
            "node": "Modify Job Attributes",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Modify Job Attributes": {
      "main": [
        [
          {
            "node": "AI Agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Fetch Jobs from Linkedin": {
      "main": [
        [
          {
            "node": "Extract Job Links",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Append or update row in sheet": {
      "main": [
        [
          {
            "node": "Score Filter",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenRouter Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "AI Agent",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    }
  },
  "settings": {
    "executionOrder": "v1"
  },
  "staticData": {
    "node:Schedule Trigger": {
      "recurrenceRules": []
    }
  },
  "meta": {
    "templateCredsSetupCompleted": true
  },
  "pinData": {},
  "versionId": "6b8deb4f-38c7-47c5-a027-d1faa2657dbc",
  "triggerCount": 1,
  "tags": []
}