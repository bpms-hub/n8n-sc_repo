{
  "createdAt": "2025-08-12T21:40:53.173Z",
  "updatedAt": "2025-08-13T18:59:06.000Z",
  "id": "tRG6bZ40wansdKgo",
  "name": "Week 3 / Drink Recommendations SubAgent",
  "active": false,
  "isArchived": false,
  "nodes": [
    {
      "parameters": {
        "model": "openai/gpt-5-mini",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenRouter",
      "typeVersion": 1,
      "position": [
        -480,
        496
      ],
      "id": "4fcb0ec5-4b00-47c5-89b6-df297987ec4d",
      "name": "OpenRouter Chat Model",
      "credentials": {
        "openRouterApi": {
          "id": "jQR7uGa0YGZ17Ov7",
          "name": "OpenRouter account"
        }
      }
    },
    {
      "parameters": {},
      "type": "@n8n/n8n-nodes-langchain.memoryBufferWindow",
      "typeVersion": 1.3,
      "position": [
        -352,
        496
      ],
      "id": "c8a912d1-b8d2-4b7b-87c3-b521fdb86a3f",
      "name": "Simple Memory",
      "disabled": true
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.chatTrigger",
      "typeVersion": 1.1,
      "position": [
        -704,
        288
      ],
      "id": "d769549a-7974-474a-b5f4-bb49f4cbf22d",
      "name": "When chat message received",
      "webhookId": "c2c00e80-2b43-45c5-9a32-55914499fdab",
      "disabled": true
    },
    {
      "parameters": {
        "jsCode": "// Get the recipe data from Format Code node\nconst recipeData = $('Clean/Format JSON').first().json;\n\n// Get the generated image URL from OpenAI\nlet imageUrl = null;\ntry {\n  const imageResponse = $('DALL-E Image Request From Recipe').first().json;\n  console.log('OpenAI Response:', JSON.stringify(imageResponse, null, 2));\n  \n  if (imageResponse && imageResponse.data && Array.isArray(imageResponse.data) && imageResponse.data.length > 0) {\n    imageUrl = imageResponse.data[0].url;\n    console.log('Generated DALL-E image URL:', imageUrl);\n  } else {\n    console.log('Unexpected OpenAI response structure');\n    console.log('Available keys:', Object.keys(imageResponse || {}));\n  }\n} catch (error) {\n  console.error('Error getting generated image:', error.message);\n}\n\n// Use a working fallback if generation failed\nif (!imageUrl) {\n  console.log('Image generation failed, using fallback');\n  imageUrl = 'https://images.unsplash.com/photo-1565299624946-b28f40a0ca4b?q=80&w=1200&auto=format&fit=crop&ixlib=rb-4.0.3';\n}\n\nconst finalRecipeData = {\n  ...recipeData,\n  recipe_image_url: imageUrl\n};\n\nconsole.log('Final image URL:', finalRecipeData.recipe_image_url);\n\nreturn [{ json: finalRecipeData }];"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        560,
        272
      ],
      "id": "86d8d004-fc6b-413f-aa46-709e1141000a",
      "name": "Process Generated Image"
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.toolSerpApi",
      "typeVersion": 1,
      "position": [
        -224,
        496
      ],
      "id": "54aadeae-5f4f-4d66-a154-b7b34cf9ac26",
      "name": "Amazon/Whole Foods",
      "credentials": {
        "serpApi": {
          "id": "HhlmY5MPBHrPTABF",
          "name": "SerpAPI account"
        }
      }
    },
    {
      "parameters": {
        "method": "POST",
        "url": "=https://api.openai.com/v1/images/generations",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "openAiApi",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"model\": \"dall-e-3\",\n  \"prompt\": \"A professional photograph of a cocktail called {{$json.recipe_name}} on a polished wooden table. The drink is the clear focal point, beautifully presented in elegant glassware with vibrant colors and fresh garnish. The background is softly blurred, indistinct, and free of text, ensuring the setting does not distract from the cocktail. Warm, natural lighting with a shallow depth of field highlights the drink’s textures and colors. No words or logos appear anywhere in the image.\",\n  \"n\": 1,\n  \"size\": \"1024x1024\",\n  \"quality\": \"standard\",\n  \"style\": \"natural\"\n}",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        336,
        272
      ],
      "id": "325ede51-fbd8-4edf-b579-ae74f29e6485",
      "name": "DALL-E Image Request From Recipe",
      "credentials": {
        "openRouterApi": {
          "id": "jQR7uGa0YGZ17Ov7",
          "name": "OpenRouter account"
        },
        "openAiApi": {
          "id": "Bq34GszUC9fnxb3H",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "// Step 1: Safely access and process the input content\nlet html = '';\ntry {\n  let rawOutput = '';\n  if ($input.first().json && $input.first().json.output) {\n    rawOutput = $input.first().json.output;\n  } else if ($input.first().json && typeof $input.first().json === 'string') {\n    rawOutput = $input.first().json;\n  } else if ($input.first().json) {\n    if ($input.first().json.message && $input.first().json.message.content) {\n      rawOutput = $input.first().json.message.content;\n    } else if ($input.first().json.data && typeof $input.first().json.data === 'string') {\n      rawOutput = $input.first().json.data;\n    }\n  }\n\n  html = rawOutput || '';\n  html = html.replace(/^```html\\n?/, '').replace(/```$/, '');\n  html = html.replace(/\\\\n/g, '\\n');\n  html = html.trim();\n} catch (error) {\n  console.warn('Error accessing or processing input content. Error:', error.message);\n  return [{\n    json: {\n      recipe_name: null,\n      recipe_ingredients: [],\n      recipe_directions: [],\n      amazon_recipe_links: [],\n      prep_time: null,\n      brief_description: null,\n      recipe_image_url: null,\n    },\n  }];\n}\n\nif (!html) {\n  console.warn('Content was empty or inaccessible after initial processing.');\n  return [{\n    json: {\n      recipe_name: null,\n      recipe_ingredients: [],\n      recipe_directions: [],\n      amazon_recipe_links: [],\n      prep_time: null,\n      brief_description: null,\n      recipe_image_url: null,\n    },\n  }];\n}\n\n// Initialize output structure\nlet recipeData = {\n  recipe_name: null,\n  recipe_ingredients: [],\n  recipe_directions: [],\n  amazon_recipe_links: [],\n  prep_time: null,\n  brief_description: null,\n  recipe_image_url: null,\n};\n\nconst lines = html.split('\\n');\nlet currentSection = null;\nlet tempIngredients = [];\nlet tempDirections = [];\nlet tempLinks = [];\nlet tempDescription = [];\n\n// Helper functions\nconst isHeadingMatch = (line, keywords) => {\n  const lower = line.toLowerCase().trim();\n  return keywords.some(keyword => \n    lower.includes(keyword.toLowerCase()) && \n    (lower.startsWith('#') || lower.endsWith(':'))\n  );\n};\n\nconst extractUrl = (text) => {\n  const match = text.match(/(https?:\\/\\/[^\\s\\)]+)/);\n  return match ? match[1] : null;\n};\n\n// Function to generate Amazon search URL from ingredient\nconst generateAmazonUrl = (ingredient) => {\n  // Extract the main ingredient name (remove quantities and parenthetical notes)\n  let cleanIngredient = ingredient\n    .replace(/^\\d+[\\s\\w]*\\s+/, '') // Remove quantities like \"1 lb\", \"2 tbsp\", etc.\n    .replace(/\\([^)]*\\)/g, '') // Remove parenthetical notes\n    .replace(/,.*$/, '') // Remove everything after first comma\n    .trim()\n    .toLowerCase();\n  \n  // Create search-friendly keywords\n  const searchTerm = encodeURIComponent(cleanIngredient.replace(/\\s+/g, '+'));\n  return `https://www.amazon.com/s?k=${searchTerm}`;\n};\n\n// Parse line by line\nfor (let i = 0; i < lines.length; i++) {\n  const line = lines[i];\n  const trimmed = line.trim();\n  \n  if (!trimmed) continue;\n\n  // Extract recipe name from the FIRST heading (# or ##) that appears\n  if (!recipeData.recipe_name && trimmed.match(/^#+\\s+/)) {\n    // Remove all # symbols and trim whitespace\n    const potentialName = trimmed.replace(/^#+\\s*/, '').trim();\n    \n    // Skip common section headers that aren't recipe names\n    const skipKeywords = [\n      'ingredients', 'preparation', 'instructions', 'amazon', 'links', \n      'estimated', 'prep time', 'preparation time', 'garnish'\n    ];\n    \n    const isSkippable = skipKeywords.some(keyword => \n      potentialName.toLowerCase().includes(keyword)\n    );\n    \n    if (!isSkippable && potentialName.length > 0) {\n      recipeData.recipe_name = potentialName;\n      continue;\n    }\n  }\n\n  // Section detection\n  if (isHeadingMatch(trimmed, ['Ingredients'])) {\n    currentSection = 'ingredients';\n    continue;\n  }\n  \n  if (isHeadingMatch(trimmed, ['Preparation Instructions', 'Instructions', 'Recipe Instructions'])) {\n    currentSection = 'instructions';\n    continue;\n  }\n  \n  if (isHeadingMatch(trimmed, ['Amazon Ingredient Links', 'Amazon Links'])) {\n    currentSection = 'amazon_links';\n    continue;\n  }\n  \n  if (isHeadingMatch(trimmed, ['Estimated Preparation Time', 'Prep Time', 'Preparation Time'])) {\n    currentSection = 'prep_time';\n    continue;\n  }\n\n  // Content parsing based on current section\n  if (currentSection === 'ingredients') {\n    // Skip subheadings within ingredients\n    if (trimmed.startsWith('#') || trimmed.endsWith(':')) {\n      continue;\n    }\n    // Collect ingredient lines\n    if (trimmed.startsWith('- ')) {\n      const ingredient = trimmed.replace(/^-\\s+/, '').trim();\n      // Remove parenthetical notes for cleaner ingredients\n      const cleanIngredient = ingredient.replace(/\\s+\\([^)]*\\)$/, '').trim();\n      if (cleanIngredient) {\n        tempIngredients.push(cleanIngredient);\n      }\n    }\n    continue;\n  }\n\n  if (currentSection === 'instructions') {\n    // Skip subheadings and section breaks\n    if (trimmed.startsWith('#') || trimmed.startsWith('**') || trimmed === '---') {\n      continue;\n    }\n    // Collect numbered steps\n    if (/^\\d+\\./.test(trimmed)) {\n      const step = trimmed.replace(/^\\d+\\.\\s*/, '').trim();\n      if (step) {\n        tempDirections.push(step);\n      }\n    }\n    continue;\n  }\n\n  if (currentSection === 'prep_time') {\n    // Look for time information - more flexible matching\n    if (trimmed.toLowerCase().includes('total') || trimmed.toLowerCase().includes('approximately')) {\n      const timeMatch = trimmed.match(/(\\d+)\\s*minutes?/i);\n      if (timeMatch) {\n        recipeData.prep_time = timeMatch[1] + ' minutes';\n      }\n    }\n    continue;\n  }\n\n  if (currentSection === 'amazon_links') {\n    if (trimmed.startsWith('- ')) {\n      const url = extractUrl(trimmed);\n      if (url) {\n        tempLinks.push(url);\n      }\n    }\n    continue;\n  }\n\n  // Collect description before any major sections\n  if (!currentSection && !trimmed.startsWith('#') && !trimmed.startsWith('---')) {\n    tempDescription.push(trimmed);\n  }\n}\n\n// Assign parsed data\nrecipeData.recipe_ingredients = tempIngredients;\nrecipeData.recipe_directions = tempDirections;\n\n// Generate Amazon links for each ingredient if not enough were parsed\nif (tempLinks.length < tempIngredients.length) {\n  console.log('Generating Amazon links for ingredients...');\n  recipeData.amazon_recipe_links = tempIngredients.map(ingredient => generateAmazonUrl(ingredient));\n} else {\n  recipeData.amazon_recipe_links = tempLinks;\n}\n\nif (tempDescription.length > 0) {\n  recipeData.brief_description = tempDescription.join(' ').trim();\n}\n\n// Fallback recipe name generation if none was found\nif (!recipeData.recipe_name && tempIngredients.length > 0) {\n  const firstFewIngredients = tempIngredients.slice(0, 2).map(ing => \n    ing.split(',')[0].split(' ').slice(-1)[0]\n  ).join(' & ');\n  recipeData.recipe_name = `Creative Recipe: ${firstFewIngredients} Fusion`;\n}\n\nconsole.log('Parsed recipe data:', recipeData);\nconsole.log('Generated Amazon links:', recipeData.amazon_recipe_links);\n\nreturn [{ json: recipeData }];"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        112,
        272
      ],
      "id": "a76a25e8-f5a0-4928-988f-0d54e5af1d09",
      "name": "Clean/Format JSON"
    },
    {
      "parameters": {
        "endpointUrl": "https://d62f580c-8a64-4c40-9663-582ea4a699ba-00-18vsjahncosza.worf.replit.dev/sse"
      },
      "type": "@n8n/n8n-nodes-langchain.mcpClientTool",
      "typeVersion": 1.1,
      "position": [
        -96,
        496
      ],
      "id": "b954a348-a810-4f82-9f7a-1fd52b44e760",
      "name": "MCP Masterclass Cookbooks",
      "alwaysOutputData": true
    },
    {
      "parameters": {
        "html": "<!DOCTYPE html>\n<html lang=\"en\" class=\"scroll-smooth\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1, maximum-scale=1\">\n    <title>{{ $json.recipe_name || 'Digital Cookbook Recipe' }}</title>\n    <script>\n      // Dark mode initialization based on system preference\n      if (\n        localStorage.theme === \"dark\" ||\n        (!(\"theme\" in localStorage) &&\n          window.matchMedia(\"(prefers-color-scheme: dark)\").matches)\n      ) {\n        document.documentElement.classList.add(\"dark\");\n      } else {\n        document.documentElement.classList.remove(\"dark\");\n      }\n    </script>\n    <style>\n      /* Elegant font pairing using system stack */\n      :root {\n        --brand: 248 60% 58%;\n        --ink: 220 18% 16%;\n        --ink-soft: 220 12% 36%;\n        --paper: 230 35% 97%;\n        --paper-2: 220 20% 98%;\n      }\n      .font-display {\n        font-family: ui-serif, Georgia, Cambria, \"Times New Roman\", Times, serif;\n        letter-spacing: 0.2px;\n      }\n      .font-sans {\n        font-family: ui-sans-serif, system-ui, -apple-system, Segoe UI, Roboto,\n          Noto Sans, Ubuntu, Cantarell, Helvetica Neue, Arial, \"Apple Color Emoji\",\n          \"Segoe UI Emoji\";\n      }\n      /* Subtle focus ring for accessibility */\n      .focus-ring:focus-visible {\n        outline: none;\n        box-shadow:\n          0 0 0 2px hsl(0 0% 100% / 0.9),\n          0 0 0 4px hsl(var(--brand) / 0.7);\n      }\n      /* Glow animation for CTA button */\n      @keyframes pulseGlow {\n        0% {\n          box-shadow: 0 0 0 0 hsl(var(--brand) / 0.25);\n        }\n        70% {\n          box-shadow: 0 0 0 14px hsl(var(--brand) / 0);\n        }\n        100% {\n          box-shadow: 0 0 0 0 hsl(var(--brand) / 0);\n        }\n      }\n      @keyframes fadeIn {\n        from { opacity: 0; transform: translateY(30px); }\n        to { opacity: 1; transform: translateY(0); }\n      }\n      \n      /* Base styles */\n      * { margin: 0; padding: 0; box-sizing: border-box; }\n      \n      body {\n        font-family: ui-sans-serif, system-ui, -apple-system, Segoe UI, Roboto, Noto Sans, Ubuntu, Cantarell, Helvetica Neue, Arial, \"Apple Color Emoji\", \"Segoe UI Emoji\";\n        line-height: 1.6;\n        color: #1e293b;\n        background: linear-gradient(135deg, #f8fafc 0%, #ffffff 50%, #f8fafc 100%);\n        min-height: 100vh;\n        padding: 1rem;\n        animation: fadeIn 0.8s ease-out;\n      }\n      \n      .dark body {\n        color: #f1f5f9;\n        background: linear-gradient(135deg, #020617 0%, #0f172a 50%, #020617 100%);\n      }\n      \n      /* Background flare */\n      .bg-flare {\n        pointer-events: none;\n        position: fixed;\n        inset: 0;\n        z-index: -10;\n        background:\n          radial-gradient(800px 400px at 10% 10%, hsl(248 100% 88% / 0.55), transparent 60%),\n          radial-gradient(700px 420px at 90% 0%, hsl(312 100% 90% / 0.45), transparent 60%),\n          radial-gradient(900px 500px at 50% 100%, hsl(200 100% 86% / 0.35), transparent 60%);\n      }\n      \n      /* Container */\n      .recipe-container {\n        max-width: 1200px;\n        margin: 0 auto;\n        animation: fadeIn 0.8s ease-out;\n      }\n      \n      /* Hero Section */\n      .hero-section {\n        border-radius: 1rem;\n        overflow: hidden;\n        border: 1px solid rgba(255, 255, 255, 0.6);\n        background: rgba(255, 255, 255, 0.7);\n        backdrop-filter: blur(12px);\n        box-shadow: 0 10px 40px -10px rgba(31, 38, 135, 0.12);\n        margin-bottom: 2rem;\n      }\n      \n      .dark .hero-section {\n        border: 1px solid rgba(255, 255, 255, 0.1);\n        background: rgba(15, 23, 42, 0.6);\n      }\n      \n      .hero-grid {\n        position: relative;\n        display: grid;\n        grid-template-columns: 1fr;\n        gap: 0;\n        align-items: stretch;\n      }\n      \n      @media (min-width: 768px) {\n        .hero-grid {\n          grid-template-columns: 1fr 1fr;\n          gap: 2rem;\n        }\n      }\n      \n      .hero-content {\n        padding: 1.5rem;\n        order: 2;\n        display: flex;\n        flex-direction: column;\n        justify-content: center;\n      }\n      \n      @media (min-width: 640px) {\n        .hero-content {\n          padding: 2.5rem;\n        }\n      }\n      \n      @media (min-width: 768px) {\n        .hero-content {\n          order: 1;\n        }\n      }\n      \n      .hero-title {\n        font-family: ui-serif, Georgia, Cambria, \"Times New Roman\", Times, serif;\n        font-size: 1.875rem;\n        font-weight: 600;\n        line-height: 1.2;\n        color: #1e293b;\n        margin-bottom: 0.75rem;\n      }\n      \n      @media (min-width: 640px) {\n        .hero-title {\n          font-size: 2.25rem;\n        }\n      }\n      \n      @media (min-width: 768px) {\n        .hero-title {\n          font-size: 3rem;\n        }\n      }\n      \n      .dark .hero-title {\n        color: #f1f5f9;\n      }\n      \n      .hero-description {\n        margin-top: 0.75rem;\n        color: #475569;\n        line-height: 1.6;\n      }\n      \n      .dark .hero-description {\n        color: #cbd5e1;\n      }\n      \n      .hero-badges {\n        margin-top: 1.25rem;\n        display: flex;\n        flex-wrap: wrap;\n        align-items: center;\n        gap: 0.75rem;\n      }\n      \n      .hero-badge {\n        display: inline-flex;\n        align-items: center;\n        gap: 0.5rem;\n        border-radius: 9999px;\n        border: 1px solid rgba(226, 232, 240, 0.6);\n        background: rgba(255, 255, 255, 0.7);\n        padding: 0.375rem 0.75rem;\n        font-size: 0.75rem;\n        color: #475569;\n      }\n      \n      .dark .hero-badge {\n        border: 1px solid rgba(255, 255, 255, 0.1);\n        background: rgba(30, 41, 59, 0.6);\n        color: #cbd5e1;\n      }\n      \n      .hero-actions {\n        margin-top: 1.5rem;\n        display: flex;\n        flex-wrap: wrap;\n        gap: 0.75rem;\n      }\n      \n      .btn-secondary {\n        display: inline-flex;\n        align-items: center;\n        gap: 0.5rem;\n        border-radius: 0.5rem;\n        border: 1px solid rgba(226, 232, 240, 0.6);\n        background: rgba(255, 255, 255, 0.8);\n        padding: 0.5rem 0.75rem;\n        font-size: 0.875rem;\n        color: #374151;\n        text-decoration: none;\n        transition: all 0.3s ease;\n      }\n      \n      .btn-secondary:hover {\n        background: #f8fafc;\n      }\n      \n      .dark .btn-secondary {\n        border: 1px solid rgba(255, 255, 255, 0.1);\n        background: rgba(30, 41, 59, 0.7);\n        color: #e2e8f0;\n      }\n      \n      .dark .btn-secondary:hover {\n        background: rgba(30, 41, 59, 1);\n      }\n      \n      .btn-primary {\n        display: inline-flex;\n        align-items: center;\n        gap: 0.5rem;\n        border-radius: 0.5rem;\n        background: linear-gradient(135deg, #d946ef, #4f46e5);\n        color: white;\n        font-size: 0.875rem;\n        font-weight: 500;\n        padding: 0.5rem 0.75rem;\n        text-decoration: none;\n        box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1);\n        transition: all 0.3s ease;\n      }\n      \n      .btn-primary:hover {\n        box-shadow: 0 10px 15px -3px rgba(0, 0, 0, 0.1);\n        transform: scale(0.99);\n      }\n      \n      .hero-image {\n        order: 1;\n        position: relative;\n      }\n      \n      @media (min-width: 768px) {\n        .hero-image {\n          order: 2;\n        }\n      }\n      \n      .hero-image-overlay {\n        position: absolute;\n        inset: 0;\n        background: linear-gradient(135deg, rgba(217, 70, 239, 0.5) 0%, transparent 50%, rgba(79, 70, 229, 0.5) 100%);\n      }\n      \n      .dark .hero-image-overlay {\n        background: linear-gradient(135deg, rgba(217, 70, 239, 0.1) 0%, transparent 50%, rgba(79, 70, 229, 0.1) 100%);\n      }\n      \n      .hero-image-container {\n        aspect-ratio: 4/3;\n      }\n      \n      @media (min-width: 768px) {\n        .hero-image-container {\n          aspect-ratio: auto;\n          height: 100%;\n        }\n      }\n      \n      .hero-image img {\n        height: 100%;\n        width: 100%;\n        object-fit: cover;\n        transition: opacity 0.3s ease;\n      }\n      \n      .hero-image img.loading {\n        opacity: 0.7;\n      }\n      \n      .hero-image img.loaded {\n        opacity: 1;\n      }\n      \n      /* Content grid */\n      .content-grid {\n        display: grid;\n        grid-template-columns: 1fr 2fr;\n        gap: 2rem;\n        margin-bottom: 2rem;\n      }\n      \n      @media (max-width: 1024px) {\n        .content-grid {\n          grid-template-columns: 1fr;\n        }\n      }\n      \n      /* Cards */\n      .card {\n        border-radius: 1rem;\n        border: 1px solid rgba(255, 255, 255, 0.6);\n        background: rgba(255, 255, 255, 0.7);\n        backdrop-filter: blur(12px);\n        padding: 1.5rem;\n        box-shadow: 0 10px 40px -10px rgba(31, 38, 135, 0.08);\n      }\n      \n      .dark .card {\n        border: 1px solid rgba(255, 255, 255, 0.1);\n        background: rgba(15, 23, 42, 0.6);\n      }\n      \n      .section-title {\n        font-family: ui-serif, Georgia, Cambria, \"Times New Roman\", Times, serif;\n        font-size: 1.5rem;\n        font-weight: 600;\n        color: #1e293b;\n        margin-bottom: 1rem;\n        display: flex;\n        align-items: center;\n        gap: 0.5rem;\n      }\n      \n      .dark .section-title {\n        color: #f1f5f9;\n      }\n      \n      .section-title::before {\n        content: '';\n        width: 4px;\n        height: 1.5rem;\n        background: linear-gradient(135deg, #667eea, #764ba2);\n        border-radius: 2px;\n      }\n      \n      /* Ingredients List */\n      .ingredients-list {\n        display: flex;\n        flex-direction: column;\n        gap: 0.75rem;\n      }\n      \n      .ingredient-item {\n        display: flex;\n        align-items: flex-start;\n        gap: 0.75rem;\n        padding: 0.75rem;\n        border-radius: 0.5rem;\n        transition: all 0.3s ease;\n        position: relative;\n      }\n      \n      .ingredient-item:hover {\n        background: rgba(248, 250, 252, 0.5);\n      }\n      \n      .dark .ingredient-item:hover {\n        background: rgba(30, 41, 59, 0.3);\n      }\n      \n      .ingredient-checkbox {\n        margin-top: 0.125rem;\n        width: 1rem;\n        height: 1rem;\n        border-radius: 0.25rem;\n        border: 2px solid #d1d5db;\n        background: white;\n        cursor: pointer;\n        transition: all 0.2s ease;\n        flex-shrink: 0;\n        appearance: none;\n        position: relative;\n      }\n      \n      .ingredient-checkbox:checked {\n        background: linear-gradient(135deg, #667eea, #764ba2);\n        border-color: #667eea;\n      }\n      \n      .ingredient-checkbox:checked::after {\n        content: '✓';\n        position: absolute;\n        top: 50%;\n        left: 50%;\n        transform: translate(-50%, -50%);\n        color: white;\n        font-size: 0.75rem;\n        font-weight: bold;\n      }\n      \n      .ingredient-content {\n        flex: 1;\n        display: flex;\n        justify-content: space-between;\n        align-items: center;\n        gap: 1rem;\n      }\n      \n      .ingredient-text {\n        flex: 1;\n        transition: all 0.3s ease;\n      }\n      \n      .ingredient-item.checked .ingredient-text {\n        opacity: 0.6;\n        text-decoration: line-through;\n      }\n      \n      .amazon-btn {\n        background: #ff9900;\n        color: white;\n        border: none;\n        padding: 0.4rem 0.6rem;\n        border-radius: 0.375rem;\n        text-decoration: none;\n        font-size: 0.75rem;\n        font-weight: 600;\n        transition: all 0.3s ease;\n        display: flex;\n        align-items: center;\n        gap: 0.25rem;\n        flex-shrink: 0;\n      }\n      \n      .amazon-btn:hover {\n        background: #e68900;\n        transform: scale(1.05);\n      }\n      \n      .amazon-logo {\n        width: 14px;\n        height: 14px;\n        background: white;\n        border-radius: 2px;\n        display: flex;\n        align-items: center;\n        justify-content: center;\n        font-size: 10px;\n        color: #ff9900;\n        font-weight: bold;\n      }\n      \n      /* Directions */\n      .directions-list {\n        counter-reset: step-counter;\n        display: grid;\n        gap: 1rem;\n      }\n      \n      .direction-step {\n        background: rgba(255, 255, 255, 0.8);\n        padding: 1.5rem;\n        border-radius: 0.75rem;\n        border: 1px solid rgba(226, 232, 240, 0.7);\n        position: relative;\n        counter-increment: step-counter;\n        transition: all 0.3s ease;\n        display: flex;\n        gap: 1rem;\n        align-items: flex-start;\n      }\n      \n      .dark .direction-step {\n        background: rgba(30, 41, 59, 0.7);\n        border: 1px solid rgba(255, 255, 255, 0.1);\n        color: #f1f5f9;\n      }\n      \n      .direction-step::before {\n        content: counter(step-counter);\n        flex-shrink: 0;\n        margin-top: 0.125rem;\n        height: 1.5rem;\n        width: 1.5rem;\n        border-radius: 50%;\n        background: linear-gradient(135deg, #667eea, #764ba2);\n        color: white;\n        display: flex;\n        align-items: center;\n        justify-content: center;\n        font-weight: bold;\n        font-size: 0.75rem;\n      }\n      \n      .direction-step:hover {\n        transform: translateY(-2px);\n        box-shadow: 0 8px 25px rgba(0, 0, 0, 0.1);\n      }\n      \n      /* Mobile optimizations */\n      @media (max-width: 768px) {\n        body {\n          padding: 0.5rem;\n        }\n        \n        .card {\n          padding: 1rem;\n        }\n        \n        .section-title {\n          font-size: 1.25rem;\n        }\n        \n        .ingredient-content {\n          flex-direction: column;\n          align-items: flex-start;\n          gap: 0.5rem;\n        }\n        \n        .amazon-btn {\n          align-self: flex-end;\n        }\n      }\n      \n      @media (max-width: 480px) {\n        .ingredient-item {\n          padding: 0.5rem;\n        }\n        \n        .amazon-btn {\n          padding: 0.3rem 0.5rem;\n          font-size: 0.7rem;\n        }\n      }\n    </style>\n</head>\n\n<body>\n    <!-- Background flare -->\n    <div class=\"bg-flare\" aria-hidden=\"true\"></div>\n\n    <div class=\"recipe-container\">\n        <!-- Hero Section -->\n        <section class=\"hero-section\">\n            <div class=\"hero-grid\">\n                <div class=\"hero-content\">\n                    <h1 class=\"hero-title\">{{ $json.recipe_name || 'Creative Fusion Recipe' }}</h1>\n                    <p class=\"hero-description\">{{ $json.brief_description || 'A delicious fusion recipe combining unique flavors and techniques.' }}</p>\n\n                    <div class=\"hero-badges\">\n                        <span class=\"hero-badge\">\n                            <svg class=\"h-4 w-4\" style=\"color: #d946ef;\" viewBox=\"0 0 24 24\" fill=\"currentColor\">\n                                <path d=\"M12 21s-6-4.35-9-8.7C1.5 9.9 3 6 6.75 6 9 6 10.5 7.5 12 9c1.5-1.5 3-3 5.25-3C21 6 22.5 9.9 21 12.3 18 16.65 12 21 12 21z\"/>\n                            </svg>\n                            Fusion Recipe\n                        </span>\n                        <span class=\"hero-badge\">\n                            <svg class=\"h-4 w-4\" style=\"color: #4f46e5;\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"1.6\">\n                                <path d=\"M12 6v6l4 2\"/>\n                                <circle cx=\"12\" cy=\"12\" r=\"9\"/>\n                            </svg>\n                            {{ $json.prep_time || 'Prep time varies' }}\n                        </span>\n                    </div>\n\n                    <div class=\"hero-actions\">\n                        <button class=\"btn-secondary focus-ring\" onclick=\"window.print()\">\n                            <svg class=\"h-4 w-4\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"1.7\">\n                                <path d=\"M6 9V2h12v7\"/>\n                                <path d=\"M6 18H4a2 2 0 0 1-2-2v-5a2 2 0 0 1 2-2h16a2 2 0 0 1 2 2v5a2 2 0 0 1-2 2h-2\"/>\n                                <path d=\"M6 14h12v8H6z\"/>\n                            </svg>\n                            Print\n                        </button>\n                    </div>\n                </div>\n\n                <!-- Visual card with generated image -->\n                <div class=\"hero-image\">\n                    <div class=\"hero-image-overlay\"></div>\n                    <div class=\"hero-image-container\">\n                        <img \n                            alt=\"{{ $json.recipe_name || 'Recipe' }} - delicious fusion cuisine\" \n                            src=\"{{ $json.recipe_image_url || 'https://images.unsplash.com/photo-1546069901-ba9599a7e63c?q=80&w=1200&auto=format&fit=crop' }}\" \n                            class=\"h-full w-full object-cover loading\"\n                            onload=\"this.classList.remove('loading'); this.classList.add('loaded');\"\n                            onerror=\"this.src='https://images.unsplash.com/photo-1546069901-ba9599a7e63c?q=80&w=1200&auto=format&fit=crop'; this.classList.remove('loading'); this.classList.add('loaded');\"\n                        />\n                    </div>\n                </div>\n            </div>\n        </section>\n\n        <div class=\"content-grid\">\n            <!-- Ingredients -->\n            <article class=\"card\">\n                <h2 class=\"section-title\">🥄 Ingredients</h2>\n                <div class=\"ingredients-list\">\n                    {{ $json.recipe_ingredients.map((ingredient, index) => `\n                        <div class=\"ingredient-item\">\n                            <input type=\"checkbox\" class=\"ingredient-checkbox\" onchange=\"toggleIngredient(this)\">\n                            <div class=\"ingredient-content\">\n                                <span class=\"ingredient-text\">${ingredient}</span>\n                                <a href=\"${$json.amazon_recipe_links[index] || '#'}\" class=\"amazon-btn\" target=\"_blank\" rel=\"noopener\">\n                                    <div class=\"amazon-logo\">A</div>\n                                    Shop\n                                </a>\n                            </div>\n                        </div>\n                    `).join('') }}\n                </div>\n            </article>\n\n            <!-- Method -->\n            <article class=\"card\">\n                <h2 class=\"section-title\">👨‍🍳 Directions</h2>\n                <div class=\"directions-list\">\n                    {{ $json.recipe_directions.map(direction => `<div class=\"direction-step\">${direction}</div>`).join('') }}\n                </div>\n            </article>\n        </div>\n    </div>\n\n    <script>\n        // Dark mode toggle functionality (optional)\n        document.addEventListener('keydown', function(e) {\n            if (e.key === 'd' && e.ctrlKey) {\n                e.preventDefault();\n                const root = document.documentElement;\n                const dark = root.classList.toggle(\"dark\");\n                localStorage.theme = dark ? \"dark\" : \"light\";\n            }\n        });\n\n        // Ingredient checkbox functionality\n        function toggleIngredient(checkbox) {\n            const ingredientItem = checkbox.closest('.ingredient-item');\n            if (checkbox.checked) {\n                ingredientItem.classList.add('checked');\n            } else {\n                ingredientItem.classList.remove('checked');\n            }\n        }\n    </script>\n</body>\n</html>"
      },
      "type": "n8n-nodes-base.html",
      "typeVersion": 1.2,
      "position": [
        784,
        272
      ],
      "id": "89918308-5b49-4bac-99c4-70dffd1085be",
      "name": "HTML Recipe Render"
    },
    {
      "parameters": {
        "inputSource": "passthrough"
      },
      "id": "5d695714-b565-470e-8716-2b8dc8484c54",
      "typeVersion": 1.1,
      "name": "When Executed by Another Workflow",
      "type": "n8n-nodes-base.executeWorkflowTrigger",
      "position": [
        -704,
        96
      ]
    },
    {
      "parameters": {
        "sendTo": "beepiams@gmail.com",
        "subject": "=Featured Drink - {{ $('Process Generated Image').item.json.recipe_name }}",
        "message": "={{ $json.html }}",
        "options": {
          "appendAttribution": false
        }
      },
      "type": "n8n-nodes-base.gmail",
      "typeVersion": 2.1,
      "position": [
        992,
        272
      ],
      "id": "9d1233ac-8425-458f-bbc6-2b0618ef82c6",
      "name": "Send a message",
      "webhookId": "104b0ecd-9977-419a-b8d0-70e7e549c5d1",
      "credentials": {
        "gmailOAuth2": {
          "id": "bQvnHcTvkeJSh8m2",
          "name": "Gmail account"
        }
      }
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=ROLE: You are a creative fusion mixologist and beverage developer with access to comprehensive global drink databases through MCP Data Vector.\n\nTASK: Your primary mission is to craft detailed, structured cocktail, mixed drink, or non-alcoholic spirit recipes that blend ingredients and techniques from diverse cultural traditions. Provide complete mixing instructions and shopping resources.\n\nINPUT: Users will request fusion cocktails, unique drink combinations, or specific beverage challenges that require research and inventive recipe development.\n\nOUTPUT: Respond with a structured recipe format containing:\n\n1. Recipe Title (see “Recipe Title Creativity” below)\n2. Brief cultural context explanation\n\n### Ingredients:\n- Each item starts with “- ” and includes precise quantities and units\n\n### Preparation Instructions:\n1. Numbered steps, each a complete, actionable direction with specific techniques (e.g., shake, stir, muddle), timing, glassware, ice type, and visual cues\n\n### Estimated Preparation Time:\n\n### Amazon Ingredient Links:\n- Each link formatted as “- [Ingredient Name]: [URL]”\n\n### Generative Image Link:\n\n#### Recipe Title Creativity (Level Up!)\n- Use portmanteau at the syllable or letter level (e.g., “Ginjito,” “Sakegroni”)\n- Stylized punctuation or casing (e.g., “MezCalypso,” “Rum’Nashi Fizz”)\n- Sensory or emotive adjectives under 6 words (e.g., “Velvet Zest,” “Midnight Orchard Spritz”)\n- Alliteration, rhyme, rhythm, or pun (e.g., “Berry Bossa Buzz,” “Sling Song Sour”)\n- Keep it under 6 words; never start with an article (“The,” “A,” “For the”)\n- Spark curiosity—titles should read like exotic invitations\n\n#### IMAGE GENERATION GUIDELINES:\n- Show only the finished drink in its glassware (no hands, faces, equipment, or text)\n- Background neutral: plain white, light gray, or softly colored\n- Studio-style even lighting\n\n#### CONSTRAINTS:\n- Never leave the recipe name empty, null, or overly simple\n- Never skip complete ingredient lists, prep steps, timing estimates, and shopping links\n- Always use proper markdown headings\n- Recipe names must never start with “For the,” “The,” “A,” or other articles\n\n#### REMINDERS:\n- Use MCP Data Vector to research authentic global ingredients and techniques, honor traditional methods within your creative fusion, and ensure every ingredient has an Amazon search link for user convenience.\n\n{{ $json.query }}",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 2.1,
      "position": [
        -384,
        272
      ],
      "id": "42cba52a-c1e0-48c4-8ea8-4fc06c680522",
      "name": "Mixologist Agent"
    }
  ],
  "connections": {
    "OpenRouter Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "Mixologist Agent",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Simple Memory": {
      "ai_memory": [
        [
          {
            "node": "Mixologist Agent",
            "type": "ai_memory",
            "index": 0
          }
        ]
      ]
    },
    "When chat message received": {
      "main": [
        [
          {
            "node": "Mixologist Agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Process Generated Image": {
      "main": [
        [
          {
            "node": "HTML Recipe Render",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Amazon/Whole Foods": {
      "ai_tool": [
        [
          {
            "node": "Mixologist Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "DALL-E Image Request From Recipe": {
      "main": [
        [
          {
            "node": "Process Generated Image",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Clean/Format JSON": {
      "main": [
        [
          {
            "node": "DALL-E Image Request From Recipe",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "MCP Masterclass Cookbooks": {
      "ai_tool": [
        [
          {
            "node": "Mixologist Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "HTML Recipe Render": {
      "main": [
        [
          {
            "node": "Send a message",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "When Executed by Another Workflow": {
      "main": [
        [
          {
            "node": "Mixologist Agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Mixologist Agent": {
      "main": [
        [
          {
            "node": "Clean/Format JSON",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "settings": {
    "executionOrder": "v1"
  },
  "staticData": null,
  "meta": {
    "templateCredsSetupCompleted": true
  },
  "pinData": {
    "When Executed by Another Workflow": [
      {
        "json": {
          "query": "Lavender Gimlet drink"
        }
      }
    ]
  },
  "versionId": "fe7ab311-500a-4a21-8a2e-618cbbde2b06",
  "triggerCount": 0,
  "tags": [
    {
      "createdAt": "2025-08-04T20:14:29.195Z",
      "updatedAt": "2025-08-04T20:14:29.195Z",
      "id": "gNzicnUMbcND7xgO",
      "name": "MCP"
    },
    {
      "createdAt": "2025-08-04T20:13:58.739Z",
      "updatedAt": "2025-08-04T20:13:58.739Z",
      "id": "zIWpEocoNxy2tecP",
      "name": "Lonely Octopus"
    }
  ]
}